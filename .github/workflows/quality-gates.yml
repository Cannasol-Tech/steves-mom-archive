name: Quality Gates

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  quality-gates:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        
    - name: Run unit tests with coverage
      run: |
        pytest tests/unit/ \
          --cov=backend \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --cov-fail-under=80 \
          --junitxml=test-results-unit.xml
          
    - name: Run integration tests
      run: |
        pytest tests/integration/ \
          --junitxml=test-results-integration.xml
          
    - name: Run acceptance tests
      run: |
        behave tests/acceptance/features/ \
          --format=json \
          --outfile=acceptance-results.json \
          --format=junit \
          --outfile=test-results-acceptance.xml
          
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          test-results-*.xml
          
    - name: Quality Gate - Coverage Check
      run: |
        python scripts/check_coverage.py --threshold=80
        
    - name: Quality Gate - Test Results Validation
      run: |
        python scripts/validate_test_results.py
        
    - name: Quality Gate - Flakiness Detection
      run: |
        python scripts/detect_flaky_tests.py
        
    - name: Archive test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          coverage.xml
          htmlcov/
          test-results-*.xml
          acceptance-results.json
